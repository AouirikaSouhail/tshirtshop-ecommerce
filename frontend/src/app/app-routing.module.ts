/** NgModule } : on importe le d√©corateur NgModule qui permet de transformer une classe normale en module Angular.
@angular/core : c‚Äôest la biblioth√®que principale d‚ÄôAngular. Elle contient tous les √©l√©ments de base pour cr√©er une application Angular. */
import { NgModule } from '@angular/core';
/**√âl√©ment	      R√¥le
RouterModule	    Active le syst√®me de navigation Angular
Routes	          Type qui permet de cr√©er une liste de chemins (URLs) et leurs composants */
import { RouterModule, Routes } from '@angular/router';
//ProduitListComponent	Composant affich√© quand on va sur /categorie/:id
import { ProduitListComponent } from './components/produit-list/produit-list.component';
import { CategoryListComponent } from './components/category-list/category-list.component';
import { ProduitDetailComponent } from './components/produit-detail/produit-detail.component';
import { LoginComponent } from './components/login/login.component';
import { RegisterComponent } from './components/register/register.component';
import { ProfileEditComponent } from './components/profile-edit/profile-edit.component';
import { RgpdComponent } from './components/rgpd/rgpd.component';
import { CgvComponent } from './components/cgv/cgv.component';
import { ContactComponent } from './components/contact/contact.component';
import {AddProductComponent} from './components/add-product/add-product.component';
import {EditProductComponent} from './components/edit-product/edit-product.component';
import { PanierComponent } from './components/panier/panier.component';
/**
 *C‚Äôest comme si tu cr√©ais une carte GPS pour Angular.
Chaque ligne dans ce tableau dit :
‚ÄúSi quelqu‚Äôun tape telle adresse (URL), montre-lui tel b√¢timent (composant)
 */
//Toujours mettre les routes les plus sp√©cifiques en haut de la liste, car elles sont plus pr√©cises.
const routes: Routes = [
  {path:"produit/:id", component: ProduitDetailComponent}, // ‚úÖ D√©tail produit (US03)
  {path: "categorie/:id", component: ProduitListComponent},
  {path:"categories", component: CategoryListComponent},
  {path:"", redirectTo: "/categories", pathMatch: "full"},
  { path: 'login', component: LoginComponent },
  { path: 'register', component: RegisterComponent },
  { path: 'profile-edit/:id', component: ProfileEditComponent },
  { path: 'rgpd', component: RgpdComponent },
  { path: 'conditions-generales', component: CgvComponent },
  { path: 'contact', component: ContactComponent },
  { path: 'add-product', component: AddProductComponent },
  { path: 'edit-product/:id', component: EditProductComponent },
  { path: 'panier', component: PanierComponent }



  
];

/**C‚Äôest un d√©corateur Angular. Il permet de dire √† Angular :
‚ÄúCe fichier est un module. Voici ce qu‚Äôil utilise et ce qu‚Äôil partage. */
@NgModule({
  /**On importe le syst√®me de routage d‚ÄôAngular ici. 
RouterModule.forRoot(routes) signifie :
‚ÄúJe veux initialiser le syst√®me de routing avec les routes que j‚Äôai d√©finies juste au-dessus.‚Äù
forRoot(...) est utilis√© une seule fois dans toute l'application (dans le module principal). */
  imports: [RouterModule.forRoot(routes)],

  /**Cela veut dire :
‚ÄúJe rends le syst√®me de routage accessible aux autres parties de l'application.‚Äù */
  exports: [RouterModule]
})
export class AppRoutingModule { }
/**On exporte la classe pour qu‚Äôelle puisse √™tre import√©e ailleurs (notamment dans AppModule).
C‚Äôest comme dire : ‚ÄúJe termine le module de routing, il est pr√™t √† √™tre utilis√©.‚Äù */


/**
 Imagine que ton app est une maison.
 Chaque pi√®ce (page ou composant) est un endroit diff√©rent.
 Le module de routing, c‚Äôest comme le plan de la maison : il indique comment aller d‚Äôune pi√®ce √† l‚Äôautre.
 Sans ce plan (le module), personne ne sait comment se d√©placer dans la maison.
 * */

 /** Qu‚Äôest-ce que @angular/router ?
C‚Äôest le module officiel d‚ÄôAngular pour g√©rer les routes.

Il contient tout ce qu‚Äôil faut pour :

Cr√©er une navigation entre pages (comme /produits, /categorie/1)
Passer des param√®tres dans l‚ÄôURL (ex. :id)
G√©rer les redirections
Afficher dynamiquement les composants dans la page

3. Qu‚Äôest-ce que RouterModule ?
C‚Äôest le module principal du syst√®me de navigation.

Il permet d‚Äôactiver le routing dans ton application.
C‚Äôest lui que tu vas configurer avec la liste des routes dans forRoot() (tu verras √ßa dans quelques lignes).

üß† Tu peux voir RouterModule comme le GPS de ton application Angular. Il sait quelle URL m√®ne √† quel composant.
 Qu‚Äôest-ce que Routes ?
C‚Äôest un type Angular (d√©fini avec TypeScript).
Il sert √† d√©clarer la liste des routes disponibles dans l‚Äôapp. */